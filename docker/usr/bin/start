#!/bin/bash

# Taken from https://github.com/CentOS/CentOS-Dockerfiles/blob/master/mariadb/centos7/docker-entrypoint.sh
# Handles re-creating the root user and setting their default password and permissions.

set -e

# If the first character of the first arg is a hyphen, make sure to prepend the whole command with "mysqld_safe"
if [ "${1:0:1}" = '-' ]; then
	set -- mysqld_safe "$@"
fi

# Setup (recreate) the root user and (optionally) an additional non-root user
if [ "$1" = 'mysqld_safe' ]; then
    BASE_DIR="/var/lib/mysql"

    # See for more info: https://mariadb.com/kb/en/mariadb/enabling-tokudb/#check-for-transparent-hugepage-support-on-linux'
    TRANSPARENT_HUGE_PAGES="$(cat /sys/kernel/mm/transparent_hugepage/enabled)"
    if [ "$TRANSPARENT_HUGE_PAGES" = '[always] madvise never' ]; then
        echo >&2 'Transparent HugePages must be turned off on the host to run TokuDB; if this container is running as priviledged it can do it for you: attempting . . . '

        echo never > /sys/kernel/mm/transparent_hugepage/enabled
        echo never > /sys/kernel/mm/transparent_hugepage/defrag
    fi

    # We don't want to run the following steps every time, so a flag file is used to prevent it from occurring on every launch
    if [ ! -e "$BASE_DIR/.database_setup_complete" ]; then
        # Root password is required
		if [ -z "$MYSQL_ROOT_PASSWORD" -a -z "$MYSQL_ALLOW_EMPTY_PASSWORD" ]; then
			echo >&2 'error: database is uninitialized and MYSQL_ROOT_PASSWORD not set'
			echo >&2 '  Did you forget to add -e MYSQL_ROOT_PASSWORD=... ?'
			exit 1
		fi
		
        if [ ! -d "$BASE_DIR/mysql" ]; then
    		echo 'Running mysql_install_db ...'
    		mysql_install_db --user=mysql --datadir="$BASE_DIR"
    		echo 'Finished mysql_install_db'
		fi
		
		tempSqlFile='/tmp/mysql-first-time.sql'

        # Install TokuDB and setup plugins
		cat > "$tempSqlFile" <<-EOSQL
			INSTALL PLUGIN TokuDB SONAME 'ha_tokudb.so';
			INSTALL PLUGIN tokudb_file_map SONAME 'ha_tokudb.so';
			INSTALL PLUGIN tokudb_fractal_tree_info SONAME 'ha_tokudb.so';
			INSTALL PLUGIN tokudb_fractal_tree_block_map SONAME 'ha_tokudb.so';
			INSTALL PLUGIN tokudb_trx SONAME 'ha_tokudb.so';
			INSTALL PLUGIN tokudb_locks SONAME 'ha_tokudb.so';
			INSTALL PLUGIN tokudb_lock_waits SONAME 'ha_tokudb.so';
			SET GLOBAL default_storage_engine=TokuDB;
		EOSQL

		
		# These statements _must_ be on individual lines, and _must_ end with
		# semicolons (no line breaks or comments are permitted).
		# TODO proper SQL escaping on ALL the things D:

		cat >> "$tempSqlFile" <<-EOSQL
			DELETE FROM mysql.user ;
			CREATE USER 'root'@'%' IDENTIFIED BY '${MYSQL_ROOT_PASSWORD}' ;
			GRANT ALL ON *.* TO 'root'@'%' WITH GRANT OPTION ;
			DROP DATABASE IF EXISTS test ;
		EOSQL

		
		if [ ! -z $MYSQL_DATABASE ]; then
			echo "CREATE DATABASE IF NOT EXISTS \`$MYSQL_DATABASE\` ;" >> "$tempSqlFile"
		fi
		
		if [ ! -z "$MYSQL_USER" ] && [ ! -z "$MYSQL_PASSWORD" ]; then
			echo "CREATE USER '$MYSQL_USER'@'%' IDENTIFIED BY '$MYSQL_PASSWORD' ;" >> "$tempSqlFile"
			
			if [ ! -z $MYSQL_DATABASE ]; then
				echo "GRANT ALL PRIVILEGES ON \`$MYSQL_DATABASE\`.* TO '$MYSQL_USER'@'%' ;" >> "$tempSqlFile"
			fi
		fi
		
		echo 'FLUSH PRIVILEGES ;' >> "$tempSqlFile"
		
		set -- "$@" --init-file="$tempSqlFile"
		
	    # Make sure the steps we just performed aren't done each iteration
	    echo >> "$BASE_DIR/.database_setup_complete"
	fi
    
    chown -R mysql:mysql "$BASE_DIR"
fi

exec "$@"
